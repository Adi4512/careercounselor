generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid()) @db.Uuid
  email         String          @unique @map("email")
  name          String?         @map("name")
  image         String?         @map("image")
  createdAt     DateTime        @default(now()) @map("created_at")
  conversations Conversation[]

  @@map("users")
}

model Conversation {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]

  @@index([userId])
  @@map("conversations")
}

enum MessageRole {
  user
  ai
}

model Message {
  id               String       @id @default(uuid()) @db.Uuid
  conversationId   String       @db.Uuid
  role             MessageRole
  content          String       @db.Text
  createdAt        DateTime     @default(now())
  parentMessageId  String?      @db.Uuid

  conversation     Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  parentMessage    Message?     @relation("Thread", fields: [parentMessageId], references: [id])
  replies          Message[]    @relation("Thread")

  @@index([conversationId])
  @@index([parentMessageId])
  @@map("messages")
}


